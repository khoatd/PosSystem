//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : @ ShoppingCentral
//  @ File Name : SaleModel.cs
//  @ Date : 2/21/2013
//  @ Author :  kenjuzi
//
//


using System.ComponentModel;
using lhk.POS.Core.Domain;
using lhk.POS.Core.Util;
namespace lhk.POS.Presentation.Models
{
    public class SaleModel : INotifyPropertyChanged
    {
        public SaleModel(Customer customer)
        {
            _customer = customer;
        }

        private Customer _customer;
        public Customer Customer
        {
            get { return _customer; }
            set
            {
                _customer = value;
                InvokePropertyChanged(new PropertyChangedEventArgs("CusName"));
                InvokePropertyChanged(new PropertyChangedEventArgs("CusAddress"));
                InvokePropertyChanged(new PropertyChangedEventArgs("CusPhone"));
                InvokePropertyChanged(new PropertyChangedEventArgs("TotalPurchase"));
            }
        }

        public string CusName
        {
            get { return _customer.Name; }
            set { _customer.Name = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusName")); }
        }

        public string CusAddress
        {
            get { return _customer.Address; }
            set { _customer.Address = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusAddress")); }
        }

        public string CusPhone
        {
            get { return _customer.Phone; }
            set { _customer.Phone = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusPhone")); }
        }

        public string TotalPurchase
        {
            get { return CurrencyUtil.ToString(_customer.TotalPurchase); }
            set { _customer.TotalPurchase = CurrencyUtil.ToDecimal(value); InvokePropertyChanged(new PropertyChangedEventArgs("TotalPurchase")); }
        }

        private bool _isPayout;

        public bool IsPayout
        {
            get { return _isPayout; }
            set { _isPayout = value; InvokePropertyChanged(new PropertyChangedEventArgs("IsPayout")); }
        }

        #region Implementation of INotifyPropertyChanged

        public event PropertyChangedEventHandler PropertyChanged;

        public void InvokePropertyChanged(PropertyChangedEventArgs e)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) handler(this, e);
        }

        #endregion
    }
}
