//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Untitled
//  @ File Name : PaymentDetailModel.cs
//  @ Date : 2/22/2013
//  @ Author : 
//
//


using System.Collections.Generic;
using System.ComponentModel;
using lhk.POS.Core.Domain;
using lhk.POS.Core.Util;
namespace lhk.POS.Presentation.Models
{
    public class PaymentDetailModel : INotifyPropertyChanged
    {
        public PaymentDetailModel(Order order, Customer customer)
        {
            _order = order;
            _orderItem = order.OrderItems;
            _customer = customer;

        }

        private Customer _customer;
        public Customer Customer
        {
            get { return _customer; }
            set
            {
                _customer = value;
                InvokePropertyChanged(new PropertyChangedEventArgs("CusName"));
                InvokePropertyChanged(new PropertyChangedEventArgs("CusAddress"));
                InvokePropertyChanged(new PropertyChangedEventArgs("CusPhone"));
                InvokePropertyChanged(new PropertyChangedEventArgs("TotalPurchase"));
            }
        }

        public string CusId
        {
            get { return _customer.Id.ToString(); }
            set { _customer.Id = int.Parse(value); InvokePropertyChanged(new PropertyChangedEventArgs("CusId")); }
        }
        public string CusName
        {
            get { return _customer.Name; }
            set { _customer.Name = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusName")); }
        }

        public string CusAddress
        {
            get { return _customer.Address; }
            set { _customer.Address = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusAddress")); }
        }

        public string CusPhone
        {
            get { return _customer.Phone; }
            set { _customer.Phone = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusPhone")); }
        }

        public string TotalPurchase
        {
            get { return CurrencyUtil.ToString(_customer.TotalPurchase); }
            set { _customer.TotalPurchase = CurrencyUtil.ToDecimal(value); InvokePropertyChanged(new PropertyChangedEventArgs("TotalPurchase")); }
        }


        private Order _order;

        public Order Order
        {
            get { return _order; }
            set { _order = value; }
        }

        private List<OrderItem> _orderItem;

        public List<OrderItem> OrderItem
        {
            get { return _orderItem; }
            set { _orderItem = value; }
        }


        public string TotalQuantity
        {
            get { return StringUtil.ToEmpty(_order.TotalQuantity); }
            set { _order.TotalQuantity = StringUtil.ToInt(value); InvokePropertyChanged(new PropertyChangedEventArgs("TotalQuantity")); }
        }

        public string TotalPayment
        {
            get { return CurrencyUtil.ToString(_order.TotalPayment); }
            set { _order.TotalPayment = CurrencyUtil.ToDecimal(value); InvokePropertyChanged(new PropertyChangedEventArgs("TotalPayment")); }
        }

        private string m_cusCash;

        public string CusCash
        {
            get { return m_cusCash; }
            set
            {
                m_cusCash = value; 
                InvokePropertyChanged(new PropertyChangedEventArgs("CusCash"));
                CusChange = CurrencyUtil.ToString(CurrencyUtil.ToDecimal(CusCash) - CurrencyUtil.ToDecimal(TotalPayment));
            }
        }
        private string m_cusChange;

        public string CusChange
        {
            get { return m_cusChange; }
            set { m_cusChange = value; InvokePropertyChanged(new PropertyChangedEventArgs("CusChange")); }
        }



        #region Implementation of INotifyPropertyChanged

        public event PropertyChangedEventHandler PropertyChanged;

        public void InvokePropertyChanged(PropertyChangedEventArgs e)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) handler(this, e);
        }

        #endregion
    }
}
