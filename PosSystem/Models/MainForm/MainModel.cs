//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Untitled ShoppingCentral
//  @ File Name : MainModel.cs
//  @ Date : 2/21/2013
//  @ Author :  Kenjuzi
//
//


using System.ComponentModel;

namespace lhk.POS.Presentation.Models
{
    public class MainModel : INotifyPropertyChanged
    {
        private bool m_isLoggedIn;

        public bool IsLoggedIn
        {
            get { return m_isLoggedIn; }
            set { m_isLoggedIn = value; InvokePropertyChanged(new PropertyChangedEventArgs("IsLoggedIn")); }
        }

        private bool m_isEditing;

        public bool IsEditing
        {
            get { return m_isEditing; }
            set { m_isEditing = value; IsNotEditing = !value; InvokePropertyChanged(new PropertyChangedEventArgs("IsEditing")); }
        }
        public bool IsNotEditing
        {
            get { return !m_isEditing; }
            set { InvokePropertyChanged(new PropertyChangedEventArgs("IsNotEditing")); }
        }

        private string m_userName;

        public string UserName
        {
            get { return m_userName; }
            set { m_userName = value; InvokePropertyChanged(new PropertyChangedEventArgs("UserName")); }
        }
        private int m_userId;

        public int UserId
        {
            get { return m_userId; }
            set { m_userId = value; InvokePropertyChanged(new PropertyChangedEventArgs("UserId")); }
        }
        private string m_userRole;

        public string UserRole
        {
            get { return m_userRole; }
            set { m_userRole = value; InvokePropertyChanged(new PropertyChangedEventArgs("UserRole")); }
        }

        #region Implementation of INotifyPropertyChanged

        public event PropertyChangedEventHandler PropertyChanged;

        public void InvokePropertyChanged(PropertyChangedEventArgs e)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) handler(this, e);
        }

        #endregion
    }
}
